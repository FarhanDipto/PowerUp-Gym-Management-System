/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

/**
 *
 * @author HP
 */
public class home extends javax.swing.JFrame {

    /**
     * Creates new form home
     */
    public home() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        addcustbox = new javax.swing.JComboBox<>();
        equip = new javax.swing.JComboBox<>();
        manger = new javax.swing.JComboBox<>();
        stafbox = new javax.swing.JComboBox<>();
        trainbox = new javax.swing.JComboBox<>();
        logout = new javax.swing.JButton();
        Package = new javax.swing.JComboBox<>();
        membership = new javax.swing.JComboBox<>();
        existing = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addcustbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Customer", "Add New Customer", "Edit Customer Info", "show all customers", "Every Customer Info", "excercise", "star customer", "bronze customer", "gym access", "denied", "customer packs" }));
        addcustbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcustboxActionPerformed(evt);
            }
        });
        getContentPane().add(addcustbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 180, 50));

        equip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        equip.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Equipment", "Add new equipments", "Show all equipments", "Costly eqipments", "equipment number", "high maintainance" }));
        equip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipActionPerformed(evt);
            }
        });
        getContentPane().add(equip, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 190, 50));

        manger.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        manger.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manager", "Add New Manager", "Edit Manager Info", "Show manager", "Highest paid Manager", "Every manager info", "managed stuff", "service", "managed trainer" }));
        manger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mangerActionPerformed(evt);
            }
        });
        getContentPane().add(manger, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 160, 170, 50));

        stafbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Staff", "Add New Staff", "Edit Staff Info", "Every staff", "New joined staff", "Staff Work Duration", "work hour", "staff catagory", " " }));
        stafbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stafboxActionPerformed(evt);
            }
        });
        getContentPane().add(stafbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, 180, 50));

        trainbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Trainer", "Add New Trainer", "Edit Trainer Info", "Show all trainers", "highest salary", "low salary", "training", "good trainer", "popular trainer ", "workhour", "trained", " " }));
        trainbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainboxActionPerformed(evt);
            }
        });
        getContentPane().add(trainbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 180, 50));

        logout.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        logout.setText("Logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        getContentPane().add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(755, 30, 90, 40));

        Package.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Package", "Add new pack", "Edit Pack Details", "Pack Info" }));
        Package.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PackageActionPerformed(evt);
            }
        });
        getContentPane().add(Package, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 190, 50));

        membership.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Membership & Finance", "Add membership", "Edit Membership", "Financial", "Due Payment" }));
        membership.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                membershipActionPerformed(evt);
            }
        });
        getContentPane().add(membership, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 340, 180, 50));

        existing.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Repeated Members", "Add new ", "Edit Repeated Customer", "Repeated" }));
        existing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingActionPerformed(evt);
            }
        });
        getContentPane().add(existing, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 340, 180, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Project/Home.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 590));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, -1, -1));

        setSize(new java.awt.Dimension(916, 639));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addcustboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcustboxActionPerformed
        // TODO add your handling code here:
        if (addcustbox.getSelectedItem() == "Add New Customer") {
            addmem ad = new addmem();
            this.toBack();
            ad.setVisible(true);
            ad.toFront();
        }
        if (addcustbox.getSelectedItem() == "Edit Customer Info") {
            editMember ad = new editMember();
            this.toBack();
            ad.setVisible(true);
            ad.toFront();
        }
        if (addcustbox.getSelectedItem() == "Every Customer Info") {
            showCustomer sh = new showCustomer();
            this.toBack();
            sh.setVisible(true);
            sh.toFront();
        }

        if (addcustbox.getSelectedItem() == "excercise") {
            EX sh = new EX();
            this.toBack();
            sh.setVisible(true);
            sh.toFront();
        }
        if (addcustbox.getSelectedItem() == "star customer") {
            star sh = new star ();
            this.toBack();
            sh.setVisible(true);
            sh.toFront();
        
       
        }
        
         if (addcustbox.getSelectedItem() == "bronze customer") {
            Bronze sh = new Bronze ();
            this.toBack();
            sh.setVisible(true);
            sh.toFront();
        
       
        }
        
        
         if (addcustbox.getSelectedItem() == "denied") {
            denied sh = new denied ();
            this.toBack();
            sh.setVisible(true);
            sh.toFront();
        
       
        }
         if (addcustbox.getSelectedItem() == "customer packs") {
            CP sh = new CP ();
            this.toBack();
            sh.setVisible(true);
            sh.toFront();
        
       
        }
         if (addcustbox.getSelectedItem() == "show all customers") {
            AllCust sh = new AllCust ();
            this.toBack();
            sh.setVisible(true);
            sh.toFront();
        
       
        }
         if (addcustbox.getSelectedItem() == "gym access") {
            access sh = new access ();
            this.toBack();
            sh.setVisible(true);
            sh.toFront();
        
       
        }
         
         
         
         
    }//GEN-LAST:event_addcustboxActionPerformed

    private void stafboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stafboxActionPerformed
        // TODO add your handling code here:
        if (stafbox.getSelectedItem() == "Add New Staff") {
            staff st = new staff();
            this.toBack();
            st.setVisible(true);
            st.toFront();
        }
        if (stafbox.getSelectedItem() == "Edit Staff Info") {
            editstaff st = new editstaff();
            this.toBack();
            st.setVisible(true);
            st.toFront();
        }
        if (stafbox.getSelectedItem() == "Every staff") {
            ES st = new ES ();
            this.toBack();
            st.setVisible(true);
            st.toFront();
        }
        if (stafbox.getSelectedItem() == "Staff Work Duration") {
            SWDuration st = new SWDuration();
            this.toBack();
            st.setVisible(true);
            st.toFront();
        }

        if (stafbox.getSelectedItem() == "New joined staff") {
            NJS st = new NJS();
            this.toBack();
            st.setVisible(true);
            st.toFront();
        }   
 if (stafbox.getSelectedItem() == "work hour") {
            workhour st = new workhour();
            this.toBack();
            st.setVisible(true);
            st.toFront();
        }
 if (stafbox.getSelectedItem() == "staff catagory") {
            staffcat st = new staffcat();
            this.toBack();
            st.setVisible(true);
            st.toFront();
        }
    }//GEN-LAST:event_stafboxActionPerformed

    private void trainboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainboxActionPerformed
        // TODO add your handling code here:
        if (trainbox.getSelectedItem() == "Add New Trainer") {
            trainer tr = new trainer();
            this.toBack();
            tr.setVisible(true);
            tr.toFront();
        }
        if (trainbox.getSelectedItem() == "Edit Trainer Info") {
            editTrainer tra = new editTrainer();
            this.toBack();
            tra.setVisible(true);
            tra.toFront();
        }
        if (trainbox.getSelectedItem() == "Show all trainers") {
            showTrainer etr = new showTrainer();
            this.toBack();
            etr.setVisible(true);
            etr.toFront();
        }
        
         if (trainbox.getSelectedItem() == "highest salary") {
            HS etr = new HS();
            this.toBack();
            etr.setVisible(true);
            etr.toFront();
        }
          if (trainbox.getSelectedItem() == "low salary") {
            LS etr = new LS();
            this.toBack();
            etr.setVisible(true);
            etr.toFront();
        }
      
          if (trainbox.getSelectedItem() == "good trainer") {
            goodtrainer etr = new goodtrainer();
            this.toBack();
            etr.setVisible(true);
            etr.toFront();
        }
          
           if (trainbox.getSelectedItem() == "workhour") {
            Tworkhour etr = new Tworkhour();
            this.toBack();
            etr.setVisible(true);
            etr.toFront();
        }
          
           if (trainbox.getSelectedItem() == "trained") {
            trained etr = new trained();
            this.toBack();
            etr.setVisible(true);
            etr.toFront();
        }
          
          
          
          
          
         //"problem showing" has been fixed
        if (trainbox.getSelectedItem() == "popular trainer ") {
            poptrainer etr = new poptrainer();
            this.toBack();
            etr.setVisible(true);
            etr.toFront();
        }

        // "problem" fixed
        if (trainbox.getSelectedItem() == "training") {
            training etr = new training();
            this.toBack();
            etr.setVisible(true);
            etr.toFront();
        }
        
        
        
        
        
    }//GEN-LAST:event_trainboxActionPerformed

    private void equipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipActionPerformed
        // TODO add your handling code here:
        if (equip.getSelectedItem() == "Add new equipments") {
            newEquip st = new newEquip();
            this.toBack();
            st.setVisible(true);
            st.toFront();
        }
        /*if (equip.getSelectedItem() == "Edit Equipment") {
            editEquip st = new editEquip();
            this.toBack();
            st.setVisible(true);
            st.toFront();
        }
*/
        if (equip.getSelectedItem() == "Show all equipments") {
            showEquipments eq = new showEquipments();
            this.toBack();
            eq.setVisible(true);
            eq.toFront();
        }
        if (equip.getSelectedItem() == "Costly eqipments") {
            CostE eq = new CostE();
            this.toBack();
            eq.setVisible(true);
            eq.toFront();
        }
        
         if (equip.getSelectedItem() == "equipment number") {
            Equipno eq = new Equipno ();
            this.toBack();
            eq.setVisible(true);
            eq.toFront();
        }
          if (equip.getSelectedItem() == "high maintainance") {
            HM eq = new HM();
            this.toBack();
            eq.setVisible(true);
            eq.toFront();
        }
        
        
    }//GEN-LAST:event_equipActionPerformed

    private void mangerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mangerActionPerformed
        // TODO add your handling code here:
        if (manger.getSelectedItem() == "Add New Manager") {
            adManager mn = new adManager();
            this.toBack();
            mn.setVisible(true);
            mn.toFront();
        }
         if (manger.getSelectedItem() == "Edit Manager Info") {
            editmanager mn = new editmanager();
            this.toBack();
            mn.setVisible(true);
            mn.toFront();
        }
        if (manger.getSelectedItem() == "Show manager") {
            showManager sm = new showManager();
            this.toBack();
            sm.setVisible(true);
            sm.toFront();
        }
         if (manger.getSelectedItem() == "Highest paid Manager") {
            Highestpaid sm = new Highestpaid ();
            this.toBack();
            sm.setVisible(true);
            sm.toFront();
        }
        if (manger.getSelectedItem() == "Every manager info") {
            EM sm = new EM ();
            this.toBack();
            sm.setVisible(true);
            sm.toFront();
        }
         if (manger.getSelectedItem() == "managed stuff") {
            managestaff sm = new managestaff ();
            this.toBack();
            sm.setVisible(true);
            sm.toFront();
        }
        
        if (manger.getSelectedItem() == "service") {
            Service sm = new Service ();
            this.toBack();
            sm.setVisible(true);
            sm.toFront();
        }
        if (manger.getSelectedItem() == "managed trainer") {
            managetrainer sm = new managetrainer ();
            this.toBack();
            sm.setVisible(true);
            sm.toFront();
        }
    }//GEN-LAST:event_mangerActionPerformed

    
    
    
    
    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
        Login lg= new Login();
        lg.setVisible(true);
        dispose();
        //this.toBack();
       // setVisible(false);
       // new Login().toFront();
       // new Login().setState(java.awt.Frame.NORMAL);
    }//GEN-LAST:event_logoutActionPerformed

    private void PackageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PackageActionPerformed
        // TODO add your handling code here:
        if (Package.getSelectedItem() == "Add new pack") {
            adpack pk = new adpack();
            this.toBack();
            pk.setVisible(true);
            pk.toFront();
        }
        if (Package.getSelectedItem() == "Edit Pack Details") {
            editpack pk = new editpack();
            this.toBack();
            pk.setVisible(true);
            pk.toFront();
        }
         if (Package.getSelectedItem() == "Pack Info") {
            PackInfo pk = new PackInfo();
            this.toBack();
            pk.setVisible(true);
            pk.toFront();
        }
    }//GEN-LAST:event_PackageActionPerformed

    private void membershipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_membershipActionPerformed
        // TODO add your handling code here:
        if (membership.getSelectedItem() == "Add membership") {
            admembership mn = new admembership();
            this.toBack();
            mn.setVisible(true);
            mn.toFront();
        }
        if (membership.getSelectedItem() == "Edit Membership") {
            editmembership mn = new editmembership();
            this.toBack();
            mn.setVisible(true);
            mn.toFront();
        }
        if (membership.getSelectedItem() == "Financial") {
            financial1 mn = new financial1();
            this.toBack();
            mn.setVisible(true);
            mn.toFront();
        }
        if (membership.getSelectedItem() == "Due Payment") {
            duePayment mn = new duePayment();
            this.toBack();
            mn.setVisible(true);
            mn.toFront();
        }
    }//GEN-LAST:event_membershipActionPerformed

    private void existingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingActionPerformed
        // TODO add your handling code here:
        if (existing.getSelectedItem() == "Add new ") {
            adexisting ad = new adexisting();
            this.toBack();
            ad.setVisible(true);
            ad.toFront();
        }

        if (existing.getSelectedItem() == "Edit Repeated Customer") {
            editexisting ad = new editexisting();
            this.toBack();
            ad.setVisible(true);
            ad.toFront();
        }
         if (existing.getSelectedItem() == "Repeated") {
            RepeatCust ad = new RepeatCust();
            this.toBack();
            ad.setVisible(true);
            ad.toFront();
        }
    }//GEN-LAST:event_existingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Package;
    private javax.swing.JComboBox<String> addcustbox;
    private javax.swing.JComboBox<String> equip;
    private javax.swing.JComboBox<String> existing;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JButton logout;
    private javax.swing.JComboBox<String> manger;
    private javax.swing.JComboBox<String> membership;
    private javax.swing.JComboBox<String> stafbox;
    private javax.swing.JComboBox<String> trainbox;
    // End of variables declaration//GEN-END:variables
}
